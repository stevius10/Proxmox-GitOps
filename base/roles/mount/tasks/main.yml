- name: Ensure filesystem
  ansible.builtin.apt:
    name: cifs-utils
    state: present
    update_cache: true

- name: Set mount as list
  set_fact:
    mount_list: "{{ mount.split(',') | reject('equalto', '') | select('match', '^[A-Za-z0-9_]+$') | list }}"
  when: mount is defined

- name: Create credentials file
  ansible.builtin.copy:
    dest: /root/.share
    content: |
      username={{ login }}
      password={{ password }}
    owner: root
    group: root
    mode: '0600'

- name: Ensure mount directories exist
  ansible.builtin.file:
    path: "{{ '/share' if item == 'share' else '/share/' ~ item }}"
    state: directory
    owner: root
    group: root
    mode: '0777'
  loop: "{{ mount_list }}"
  loop_control:
    label: "{{ item }}"

- name: Enable mount
  ansible.posix.mount:
    src: "//{{ host }}/{{ item }}"
    path: "{{ '/share' if item == 'share' else '/share/' ~ item }}"
    fstype: cifs
    opts: "credentials=/root/.share,uid=1000,gid=1000,vers=3.0,_netdev,x-systemd.requires=network-online.target,x-systemd.after=network-online.target,nofail"
    state: mounted
  loop: "{{ mount_list }}"
  loop_control:
    label: "{{ item }}"
  notify:
    - Reload systemd

- name: Enable network waiting service
  ansible.builtin.systemd:
    name: systemd-networkd-wait-online.service
    enabled: yes
  notify:
    - Remount
