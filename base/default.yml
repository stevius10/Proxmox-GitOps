---
- name: "Base Container"
  hosts: localhost
  gather_facts: no
  vars:
    os: "local:vztmpl/debian-12-standard_12.7-1_amd64.tar.zst"
    ssh_keys_dir: "/share/.ssh"
  tasks:
    - name: Check configuration
      ansible.builtin.stat:
        path: "config.json"
      register: config_file

    - name: Load configuration
      ansible.builtin.include_vars:
        file: "config.json"
        name: config
      when: config_file.stat.exists

    - name: Set connection configuration
      ansible.builtin.set_fact:
        PROXMOX_HOST: "{{ lookup('env', 'PROXMOX_HOST') }}"
        PROXMOX_USER: "{{ lookup('env', 'PROXMOX_USER') }}"
        PROXMOX_TOKEN: "{{ lookup('env', 'PROXMOX_TOKEN') }}"
        PROXMOX_SECRET: "{{ lookup('env', 'PROXMOX_SECRET') }}"
      when:
        - (config_file.stat.exists and config.proxmox is defined) or (not config_file.stat.exists)

    - name: Ensure key directory
      ansible.builtin.file:
        path: "{{ ssh_keys_dir }}"
        state: directory
      tags: base

    - name: Generate key
      community.crypto.openssh_keypair:
        path: "{{ ssh_keys_dir }}/{{ id }}"
        type: ed25519
        force: false
      tags: base

    - name: Check container exists
      community.general.proxmox_vm_info:
        api_host: "{{ PROXMOX_HOST }}"
        api_user: "{{ PROXMOX_USER }}"
        api_token_id: "{{ PROXMOX_TOKEN }}"
        api_token_secret: "{{ PROXMOX_SECRET }}"
        api_port: 8006
        node: "pve"
        vmid: "{{ id }}"
      register: container_info
      delegate_to: localhost
      ignore_errors: yes

    - name: Set container exists
      set_fact:
        container_exists: "{{ container_info is success and (container_info.proxmox_vms | length) > 0 }}"

    - name: Stop container
      community.general.proxmox:
        api_host: "{{ PROXMOX_HOST }}"
        api_user: "{{ PROXMOX_USER }}"
        api_token_id: "{{ PROXMOX_TOKEN }}"
        api_token_secret: "{{ PROXMOX_SECRET }}"
        api_port: 8006
        vmid: "{{ id }}"
        node: "pve"
        state: stopped
        force: yes
      delegate_to: localhost
      ignore_errors: yes
      when: container_exists and (terminate | bool == true)

    - name: Remove container
      community.general.proxmox:
        api_host: "{{ PROXMOX_HOST }}"
        api_user: "{{ PROXMOX_USER }}"
        api_token_id: "{{ PROXMOX_TOKEN }}"
        api_token_secret: "{{ PROXMOX_SECRET }}"
        api_port: 8006
        vmid: "{{ id }}"
        node: "pve"
        state: absent
      delegate_to: localhost
      ignore_errors: yes
      register: removal
      when: container_exists and (terminate | bool == true)

    - name: Wait (removal)
      wait_for:
        path: "/var/lib/vz/private/{{ id }}"
        state: absent
        timeout: 30
      delegate_to: localhost
      when: container_exists and (terminate | bool == true)

    - name: Set Mounts
      set_fact:
        mounts: "{{ mounts | default({}) | combine({ 'mp' ~ idx: 'local:' ~ item.split(':')[1] ~ ',mp=/share/' ~ (item.split(':')[0] if item.split(':')[0] != 'share' else '') }) }}"
      loop: "{{ (mount | default('')).split(',') | select('match', '^.+:.+$') }}"
      loop_control:
        index_var: idx
      when:
        - mount is defined
        - (mount | trim | length) > 0

    - name: Create container
      community.general.proxmox:
        api_host: "{{ PROXMOX_HOST }}"
        api_user: "{{ PROXMOX_USER }}"
        api_token_id: "{{ PROXMOX_TOKEN }}"
        api_token_secret: "{{ PROXMOX_SECRET }}"
        api_port: 8006
        vmid: "{{ id }}"
        node: "pve"
        hostname: "{{ hostname }}"
        ostemplate: "{{ os }}"
        cores: "{{ cores }}"
        memory: "{{ memory }}"
        pubkey: "{{ lookup('file', [ssh_keys_dir, id ~ '.pub'] | path_join) }}"
        swap: "{{ swap }}"
        disk: "{{ disk }}"
        netif:
          net0: "name=eth0,gw=192.168.178.1,ip={{ ip }}/24,bridge=vmbr0"
        mounts: "{{ mounts | default({}) }}"
        onboot: "{{ boot }}"
        state: present
      delegate_to: localhost

    - name: Start container
      community.general.proxmox:
        api_host: "{{ PROXMOX_HOST }}"
        api_user: "{{ PROXMOX_USER }}"
        api_token_id: "{{ PROXMOX_TOKEN }}"
        api_token_secret: "{{ PROXMOX_SECRET }}"
        api_port: 8006
        vmid: "{{ id }}"
        node: "pve"
        state: started
      delegate_to: localhost

    - name: Wait (SSH)
      wait_for:
        port: 22
        host: "{{ ip }}"
        timeout: 180
      ignore_errors: yes
      delegate_to: localhost

    - name: Test user already configured
      command: "ssh -o BatchMode=yes -o ConnectTimeout=5 -i {{ ssh_keys_dir }}/{{ id }} config@{{ ip }} echo success"
      register: ssh_config_test
      failed_when: false
      changed_when: false
      when: container_exists and (terminate | bool == false)

    - name: Set SSH user
      set_fact:
        ssh_user: "{{ 'config' if (container_exists and (terminate | bool == false) and (ssh_config_test.rc | default(1)) == 0) else 'root' }}"

    - name: Add container
      add_host:
        name: container
        id: "{{ id }}"
        ansible_host: "{{ ip }}"
        ansible_user: "{{ ssh_user }}"
        ansible_ssh_private_key_file: "{{ [ssh_keys_dir, id] | path_join }}"
        ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
        public_key: "{{ lookup('file', [ssh_keys_dir, id ~ '.pub'] | path_join) }}"
        private_key: "{{ lookup('file', [ssh_keys_dir, id] | path_join) }}"

    - name: Reset hosts
      ansible.builtin.known_hosts:
        name: "{{ ip }}"
        state: absent
      delegate_to: localhost
      become: false

- name: Remote container configuration
  hosts: container
  gather_facts: yes
  become: true
  tasks:
    - name: Apply base configuration
      ansible.builtin.include_role:
        name: base
      tags: base